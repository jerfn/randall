The first thing I did was read through randall.c to get a general understanding of the structure and what each part of the code did.
I added some comments to help with my understanding.

I then read through the Makefile and got a general understanding of it, then proceeded to add a check rule that performs a simple
check to see if the length of the output of randall matches what is expected.

To start refactoring, I created options.c and options.h to handle command line arguments, currently of which only reading nbytes exists.
I moved the code that reads nbytes to options.c and options.h and edited the Makefile to update the compilation and linking. I also slightly 
edited randall.c to handle errors from reading nbytes.

I then refactored the hardware randomization code to rand64-hw.c and rand64-hw.h, adding headers to the new refactoring files and removing
some from randall.c. I then recompiled and linked using make and tested. The same process was done to refactor the software randomization 
to rand64-sw.c and rand64-sw.h.

I then refactored writebytes to output.c and output.h, again remaking and testing.